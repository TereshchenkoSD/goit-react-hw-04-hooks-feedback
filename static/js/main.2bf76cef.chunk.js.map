{"version":3,"sources":["components/Section/Section.styles.jsx","components/Section/Section.jsx","components/FeedbackOptions/FeedbackOptions.styles.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/Statistics.styles.jsx","components/Statistics/Statistics.jsx","components/Notification/Notification.styles.jsx","components/Notification/Notification.jsx","App.js","index.js"],"names":["Wrapper","styled","section","Title","h2","Section","title","children","Container","div","Button","button","FeedbackOptions","options","onLeaveFeedback","map","option","name","type","onClick","List","ul","ListItem","li","Statistics","good","neutral","bad","total","positivePercentage","Message","p","Notification","message","App","useState","setGood","setNeutral","setBad","feedbacks","isFeedback","optionKeys","Object","keys","countTotalFeedback","values","reduce","acc","value","e","target","prevState","Math","round","ReactDOM","render","StrictMode","document","querySelector"],"mappings":"4PAEaA,EAAUC,IAAOC,QAAV,0JAUPC,EAAQF,IAAOG,GAAV,oD,OCIHC,EAbC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,eAACP,EAAD,WACGM,GAAS,cAACH,EAAD,UAAQG,IACjBC,MCLMC,EAAYP,IAAOQ,IAAV,+HAQTC,EAAST,IAAOU,OAAV,irCCeJC,EAtBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,cAACN,EAAD,UACGK,EAAQE,KAAI,SAAAC,GAAM,OACjB,cAACN,EAAD,CAEEO,KAAMD,EACNE,KAAK,SACLC,QAASL,EAJX,SAMGE,GALIA,SCNFI,EAAOnB,IAAOoB,GAAV,0BAEJC,EAAWrB,IAAOsB,GAAV,qXCmBNC,EApBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,eAACT,EAAD,WACE,eAACE,EAAD,oBAAiBG,KACjB,eAACH,EAAD,uBAAoBI,KACpB,eAACJ,EAAD,mBAAgBK,KAChB,eAACL,EAAD,qBAAkBM,KAClB,eAACN,EAAD,iCAA8BO,EAA9B,WCROC,EAAU7B,IAAO8B,EAAV,0BCSLC,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,cAACH,EAAD,UAAUG,KCuEJC,EAjEI,WACjB,MAAwBC,mBAAS,GAAjC,mBAAOV,EAAP,KAAaW,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOT,EAAP,KAAgBW,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOR,EAAP,KAAYW,EAAZ,KAEMC,EAAY,CAAEd,OAAMC,UAASC,OAC7Ba,EAAaf,GAAQC,GAAWC,EAChCc,EAAaC,OAAOC,KAAKJ,GAuBzBK,EAAqB,WAGzB,OAFyBF,OAAOG,OAAON,GAEfO,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAMC,IAAO,IAO9D,OACE,gCACE,cAAC,EAAD,CAAS1C,MAAM,wBAAf,SACE,cAAC,EAAD,CACEO,QAAS4B,EACT3B,gBApCgB,SAAAmC,GAGtB,OAFgBA,EAAEC,OAAOjC,MAGvB,IAAK,OACHmB,GAAQ,SAAAe,GAAS,OAAIA,EAAY,KACjC,MAEF,IAAK,UACHd,GAAW,SAAAc,GAAS,OAAIA,EAAY,KACpC,MAEF,IAAK,MACHb,GAAO,SAAAa,GAAS,OAAIA,EAAY,KAChC,MAEF,QACE,aAsBF,cAAC,EAAD,CAAS7C,MAAM,aAAf,SACGkC,EACC,cAAC,EAAD,CACEf,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOgB,IACPf,mBAlBDJ,EAAO2B,KAAKC,MAAc,IAAP5B,EAAcmB,KAAwB,IAqB1D,cAAC,EAAD,CAAcX,QAAQ,4B,MC/DhCqB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,cAAc,Y","file":"static/js/main.2bf76cef.chunk.js","sourcesContent":["import styled from '@emotion/styled';\r\n\r\nexport const Wrapper = styled.section`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  &:not(:last-child) {\r\n    margin-bottom: 20px;\r\n  }\r\n`;\r\n\r\nexport const Title = styled.h2`\r\n  margin-bottom: 10px;\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport { Wrapper, Title } from './Section.styles';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <Wrapper>\r\n      {title && <Title>{title}</Title>}\r\n      {children}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\nexport default Section;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  width: 100%;\r\n  max-width: 360px;\r\n  color: #fff;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  padding: 4px 8px;\r\n  width: 100%\r\n  max-width: 80px;\r\n  min-width: 60px;\r\n\r\n  outline: none;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n\r\n  color: black;\r\n  font-size: 16px;\r\n  font-weight: 700;\r\n  line-height: 1.875;\r\n  letter-spacing: 0.06em;\r\n\r\n  transition-property: color, background-color, box-shadow;\r\n  transition-duration: 250ms;\r\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\n\r\n\r\n  &:not(:last-child) {\r\n    margin-right: 10px;\r\n  }\r\n\r\n\r\n  &:nth-child(1n) {\r\n\r\n\r\n    &:hover {\r\n      color: white;\r\n      background-color: green;\r\n      box-shadow: 0px 3px 1px rgba(0, 0, 0, 0.1), 0px 1px 2px rgba(0, 0, 0, 0.08),\r\n      0px 2px 2px rgba(0, 0, 0, 0.12);\r\n    }\r\n  }\r\n\r\n  &:nth-child(2n) {\r\n\r\n\r\n    &:hover {\r\n      color: white;\r\n      background-color: grey;\r\n      box-shadow: 0px 3px 1px rgba(0, 0, 0, 0.1), 0px 1px 2px rgba(0, 0, 0, 0.08),\r\n      0px 2px 2px rgba(0, 0, 0, 0.12);\r\n    }\r\n  }\r\n\r\n  &:nth-child(3n) {\r\n\r\n\r\n    &:hover {\r\n      color: white;\r\n      background-color: red;\r\n      box-shadow: 0px 3px 1px rgba(0, 0, 0, 0.1), 0px 1px 2px rgba(0, 0, 0, 0.08),\r\n      0px 2px 2px rgba(0, 0, 0, 0.12);\r\n    }\r\n  }\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport { Container, Button } from './FeedbackOptions.styles';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <Container>\r\n      {options.map(option => (\r\n        <Button\r\n          key={option}\r\n          name={option}\r\n          type=\"button\"\r\n          onClick={onLeaveFeedback}\r\n        >\r\n          {option}\r\n        </Button>\r\n      ))}\r\n    </Container>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string.isRequired),\r\n  onLeaveFeedback: PropTypes.func,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const List = styled.ul``;\r\n\r\nexport const ListItem = styled.li`\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  line-height: 1.875;\r\n  letter-spacing: 0.06em;\r\n\r\n  &:not(:last-child) {\r\n    margin-bottom: 10px;\r\n  }\r\n\r\n  &:first-child {\r\n    color: green;\r\n  }\r\n\r\n  &:nth-child(2n) {\r\n    color: grey;\r\n  }\r\n\r\n  &:nth-last-child(3n) {\r\n    color: red;\r\n  }\r\n\r\n  &:nth-last-child(-n + 2) {\r\n    color: black;\r\n  }\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport { List, ListItem } from './Statistics.styles';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <List>\r\n      <ListItem>Good: {good}</ListItem>\r\n      <ListItem>Neutral: {neutral}</ListItem>\r\n      <ListItem>Bad: {bad}</ListItem>\r\n      <ListItem>Total: {total}</ListItem>\r\n      <ListItem>Positive feedback: {positivePercentage}%</ListItem>\r\n    </List>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number,\r\n  positivePercentage: PropTypes.number,\r\n};\r\n\r\nexport default Statistics;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Message = styled.p``;\r\n","import PropTypes from 'prop-types';\r\nimport { Message } from './Notification.styles';\r\n\r\nconst Notification = ({ message }) => {\r\n  return <Message>{message}</Message>;\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\n\r\nexport default Notification;\r\n","import { useState } from 'react';\r\n\r\nimport Section from './components/Section';\r\n\r\nimport FeedbackOptions from './components/FeedbackOptions';\r\n\r\nimport Statistics from './components/Statistics';\r\n\r\nimport Notification from './components/Notification';\r\n\r\nexport const App = () => {\r\n  const [good, setGood] = useState(0);\r\n  const [neutral, setNeutral] = useState(0);\r\n  const [bad, setBad] = useState(0);\r\n\r\n  const feedbacks = { good, neutral, bad };\r\n  const isFeedback = good || neutral || bad;\r\n  const optionKeys = Object.keys(feedbacks);\r\n\r\n  const handleIncrement = e => {\r\n    const btnName = e.target.name;\r\n\r\n    switch (btnName) {\r\n      case 'good':\r\n        setGood(prevState => prevState + 1);\r\n        break;\r\n\r\n      case 'neutral':\r\n        setNeutral(prevState => prevState + 1);\r\n        break;\r\n\r\n      case 'bad':\r\n        setBad(prevState => prevState + 1);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const countTotalFeedback = () => {\r\n    const totalStateValues = Object.values(feedbacks);\r\n\r\n    return totalStateValues.reduce((acc, value) => acc + value, 0);\r\n  };\r\n\r\n  const countPositiveFeedbackPercentage = () => {\r\n    return good ? Math.round((good * 100) / countTotalFeedback()) : 0;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Section title=\"Please leave feedback\">\r\n        <FeedbackOptions\r\n          options={optionKeys}\r\n          onLeaveFeedback={handleIncrement}\r\n        />\r\n      </Section>\r\n      <Section title=\"Statistics\">\r\n        {isFeedback ? (\r\n          <Statistics\r\n            good={good}\r\n            neutral={neutral}\r\n            bad={bad}\r\n            total={countTotalFeedback()}\r\n            positivePercentage={countPositiveFeedbackPercentage()}\r\n          />\r\n        ) : (\r\n          <Notification message=\"No feedback given\" />\r\n        )}\r\n      </Section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.querySelector('#root'),\r\n);\r\n"],"sourceRoot":""}